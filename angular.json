{
  "version": 1,
  "projects": {
    "libs": {
      "root": "libs",
      "sourceRoot": "libs",
      "projectType": "library",
      "prefix": "eview",
      "architect": {
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "testing/test.libs.ts",
            "tsConfig": "testing/tsconfig.libs.spec.json",
            "karmaConfig": "testing/karma.conf.js"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "testing/tsconfig.libs.json",
              "testing/tsconfig.libs.spec.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    },
    "xplat": {
      "root": "xplat",
      "sourceRoot": "xplat",
      "projectType": "library",
      "prefix": "eview",
      "architect": {
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "testing/test.xplat.ts",
            "tsConfig": "testing/tsconfig.xplat.spec.json",
            "karmaConfig": "testing/karma.conf.js"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "testing/tsconfig.xplat.json",
              "testing/tsconfig.xplat.spec.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    },
    "web-app": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/web-app",
      "sourceRoot": "apps/web-app/src",
      "prefix": "eview",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/web-app",
            "index": "apps/web-app/src/index.html",
            "main": "apps/web-app/src/main.ts",
            "polyfills": "apps/web-app/src/polyfills.ts",
            "tsConfig": "apps/web-app/tsconfig.app.json",
            "aot": false,
            "assets": [
              "apps/web-app/src/favicon.ico",
              "apps/web-app/src/assets",
              {
                "glob": "**/*",
                "input": "libs/assets/",
                "output": "./assets"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/leaflet/dist/images",
                "output": "assets/"
              }
            ],
            "styles": [
              "xplat/web/scss/_index.scss",
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/font-awesome/css/font-awesome.min.css",
              "node_modules/leaflet/dist/leaflet.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.Default.css",
              "apps/web-app/src/styles.scss"
            ],
            "scripts": [
              "node_modules/leaflet/dist/leaflet.js",
              "node_modules/leaflet.markercluster/dist/leaflet.markercluster.js"
            ]
          },
          "configurations": {
            "local": {},
            "dev": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.dev.ts"
                }
              ]
            },
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.prod.ts"
                },
                {
                  "replace": "apps/web-app/src/environments/environment.ts",
                  "with": "apps/web-app/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "web-app:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "web-app:build:local"
            },
            "dev": {
              "browserTarget": "web-app:build:dev"
            },
            "production": {
              "browserTarget": "web-app:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "web-app:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/web-app/tsconfig.app.json",
              "apps/web-app/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/web-app/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/web-app/jest.config.js",
            "tsConfig": "apps/web-app/tsconfig.spec.json",
            "setupFile": "apps/web-app/src/test-setup.ts"
          }
        }
      }
    },
    "web-app-e2e": {
      "root": "apps/web-app-e2e",
      "sourceRoot": "apps/web-app-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/web-app-e2e/cypress.json",
            "tsConfig": "apps/web-app-e2e/tsconfig.e2e.json",
            "devServerTarget": "web-app:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "web-app:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/web-app-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/web-app-e2e/**"
            ]
          }
        }
      }
    },
    "mobile-app": {
      "root": "apps/mobile-app/",
      "sourceRoot": "apps/mobile-app/src",
      "projectType": "application",
      "prefix": "eview",
      "schematics": {
        "@schematics/angular:component": {
          "styleext": "scss"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "apps/mobile-app/www",
            "index": "apps/mobile-app/src/index.html",
            "main": "apps/mobile-app/src/main.ts",
            "polyfills": "apps/mobile-app/src/polyfills.ts",
            "tsConfig": "apps/mobile-app/tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "apps/mobile-app/src/assets",
                "output": "assets"
              },
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              },
              {
                "glob": "**/*",
                "input": "libs/assets/",
                "output": "./assets"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/leaflet/dist/images",
                "output": "assets/"
              }
            ],
            "styles": [
              "xplat/web/scss/_index.scss",
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/font-awesome/css/font-awesome.min.css",
              "node_modules/leaflet/dist/leaflet.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.Default.css",
              "apps/mobile-app/src/styles.scss",
              "node_modules/webdatarocks/webdatarocks.min.css",
              "node_modules/flexmonster/flexmonster.full.js"
            ],
            "scripts": [
              "node_modules/leaflet/dist/leaflet.js",
              "node_modules/leaflet.markercluster/dist/leaflet.markercluster.js",
              "node_modules/webdatarocks/webdatarocks.js",
              "node_modules/webdatarocks/webdatarocks.toolbar.min.js"
            ]
          },
          "configurations": {
            "dev": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.dev.ts"
                }
              ]
            },
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.prod.ts"
                },
                {
                  "replace": "apps/mobile-app/src/environments/environment.ts",
                  "with": "apps/mobile-app/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "9mb"
                }
              ]
            },
            "ci": {
              "progress": false
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "mobile-app:build"
          },
          "configurations": {
            "dev": {
              "browserTarget": "web-app:build:dev"
            },
            "production": {
              "browserTarget": "mobile-app:build:production"
            },
            "ci": {
              "progress": false
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "mobile-app:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "apps/mobile-app/src/test.ts",
            "polyfills": "apps/mobile-app/src/polyfills.ts",
            "tsConfig": "apps/mobile-app/tsconfig.spec.json",
            "karmaConfig": "apps/mobile-app/karma.conf.js",
            "styles": [],
            "scripts": [],
            "assets": [
              {
                "glob": "favicon.ico",
                "input": "apps/mobile-app/src/",
                "output": "/"
              },
              {
                "glob": "**/*",
                "input": "apps/mobile-app/src/assets",
                "output": "/assets"
              },
              {
                "glob": "**/*",
                "input": "libs/assets/",
                "output": "./assets"
              }
            ]
          },
          "configurations": {
            "ci": {
              "progress": false,
              "watch": false
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/mobile-app/tsconfig.app.json",
              "apps/mobile-app/tsconfig.spec.json",
              "apps/mobile-app/e2e/tsconfig.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        },
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "apps/mobile-app/e2e/protractor.conf.js",
            "devServerTarget": "mobile-app:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "mobile-app:serve:production"
            },
            "ci": {
              "devServerTarget": "mobile-app:serve:ci"
            }
          }
        },
        "ionic-cordova-build": {
          "builder": "@ionic/angular-toolkit:cordova-build",
          "options": {
            "browserTarget": "mobile-app:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "mobile-app:build:production"
            }
          }
        },
        "ionic-cordova-serve": {
          "builder": "@ionic/angular-toolkit:cordova-serve",
          "options": {
            "cordovaBuildTarget": "mobile-app:ionic-cordova-build",
            "devServerTarget": "mobile-app:serve"
          },
          "configurations": {
            "production": {
              "cordovaBuildTarget": "mobile-app:ionic-cordova-build:production",
              "devServerTarget": "mobile-app:serve:production"
            }
          }
        }
      }
    },
    "hybrid-app": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hybrid-app",
      "sourceRoot": "apps/hybrid-app/src",
      "prefix": "eview",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/hybrid-app",
            "index": "apps/hybrid-app/src/index.html",
            "main": "apps/hybrid-app/src/main.ts",
            "polyfills": "apps/hybrid-app/src/polyfills.ts",
            "tsConfig": "apps/hybrid-app/tsconfig.app.json",
            "aot": false,
            "assets": [
              "apps/hybrid-app/src/favicon.ico",
              "apps/hybrid-app/src/assets",
              {
                "glob": "**/*",
                "input": "libs/assets/",
                "output": "./assets"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/leaflet/dist/images",
                "output": "assets/"
              }
            ],
            "styles": [
              "xplat/web/scss/_index.scss",
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/font-awesome/css/font-awesome.min.css",
              "node_modules/leaflet/dist/leaflet.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.Default.css",
              "apps/hybrid-app/src/styles.scss",
              "node_modules/webdatarocks/webdatarocks.min.css",
              "node_modules/flexmonster/flexmonster.full.js"
            ],
            "scripts": [
              "node_modules/leaflet/dist/leaflet.js",
              "node_modules/leaflet.markercluster/dist/leaflet.markercluster.js",
              "node_modules/webdatarocks/webdatarocks.js",
              "node_modules/webdatarocks/webdatarocks.toolbar.min.js"
            ]
          },
          "configurations": {
            "local": {},
            "dev": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.dev.ts"
                }
              ]
            },
            "test": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.staging.ts"
                },
                {
                  "replace": "apps/hybrid-app/src/environments/environment.ts",
                  "with": "apps/hybrid-app/src/environments/environment.staging.ts"
                }
              ]
          },
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.prod.ts"
                },
                {
                  "replace": "apps/hybrid-app/src/environments/environment.ts",
                  "with": "apps/hybrid-app/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "10mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hybrid-app:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "hybrid-app:build:local"
            },
            "dev": {
              "browserTarget": "hybrid-app:build:dev"
            },
            "production": {
              "browserTarget": "hybrid-app:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hybrid-app:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hybrid-app/tsconfig.app.json",
              "apps/hybrid-app/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/hybrid-app/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hybrid-app/jest.config.js",
            "tsConfig": "apps/hybrid-app/tsconfig.spec.json",
            "setupFile": "apps/hybrid-app/src/test-setup.ts"
          }
        }
      }
    },
    "ionic-app": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hybrid-app",
      "sourceRoot": "apps/hybrid-app/src",
      "prefix": "eview",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "apps/hybrid-app/www",
            "index": "apps/hybrid-app/src/index.html",
            "main": "apps/hybrid-app/src/main.ts",
            "polyfills": "apps/hybrid-app/src/polyfills.ts",
            "tsConfig": "apps/hybrid-app/tsconfig.app.json",
            "aot": false,
            "assets": [
              "apps/hybrid-app/src/favicon.ico",
              "apps/hybrid-app/src/assets",
              {
                "glob": "**/*",
                "input": "libs/assets/",
                "output": "./assets"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/leaflet/dist/images",
                "output": "assets/"
              }
            ],
            "styles": [
              "xplat/web/scss/_index.scss",
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/font-awesome/css/font-awesome.min.css",
              "node_modules/leaflet/dist/leaflet.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.css",
              "node_modules/leaflet.markercluster/dist/MarkerCluster.Default.css",
              "apps/hybrid-app/src/styles.scss",
              "node_modules/webdatarocks/webdatarocks.min.css",
              "node_modules/flexmonster/flexmonster.full.js"
            ],
            "scripts": [
              "node_modules/leaflet/dist/leaflet.js",
              "node_modules/leaflet.markercluster/dist/leaflet.markercluster.js",
              "node_modules/webdatarocks/webdatarocks.js",
              "node_modules/webdatarocks/webdatarocks.toolbar.min.js"
            ]
          },
          "configurations": {
            "local": {},
            "dev": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.dev.ts"
                }
              ]
            },
            "production": {
              "fileReplacements": [
                {
                  "replace": "libs/core/environments/environment.ts",
                  "with": "libs/core/environments/environment.prod.ts"
                },
                {
                  "replace": "apps/hybrid-app/src/environments/environment.ts",
                  "with": "apps/hybrid-app/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hybrid-app:build"
          },
          "configurations": {
            "local": {
              "browserTarget": "hybrid-app:build:local"
            },
            "dev": {
              "browserTarget": "hybrid-app:build:dev"
            },
            "production": {
              "browserTarget": "hybrid-app:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hybrid-app:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hybrid-app/tsconfig.app.json",
              "apps/hybrid-app/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/hybrid-app/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hybrid-app/jest.config.js",
            "tsConfig": "apps/hybrid-app/tsconfig.spec.json",
            "setupFile": "apps/hybrid-app/src/test-setup.ts"
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nstudio/xplat"
  },
  "schematics": {
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    }
  }
}